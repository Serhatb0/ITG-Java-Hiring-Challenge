package com.biricik.automotive.bootstrapping;

import java.util.ArrayList;
import java.util.List;

import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

import com.biricik.automotive.model.Brand;
import com.biricik.automotive.model.Category;
import com.biricik.automotive.model.City;
import com.biricik.automotive.model.Country;
import com.biricik.automotive.model.Customer;
import com.biricik.automotive.model.District;
import com.biricik.automotive.model.ERole;
import com.biricik.automotive.model.Image;
import com.biricik.automotive.model.Product;
import com.biricik.automotive.model.Role;
import com.biricik.automotive.repository.BrandRepository;
import com.biricik.automotive.repository.CategoryRepository;
import com.biricik.automotive.repository.CityRepository;
import com.biricik.automotive.repository.CountryRepository;
import com.biricik.automotive.repository.CustomerRepository;
import com.biricik.automotive.repository.DistrictRepository;
import com.biricik.automotive.repository.ImageRepository;
import com.biricik.automotive.repository.ProductRepository;
import com.biricik.automotive.repository.RoleRepository;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.iyzipay.model.Address;

@Component
public class BootstrapData implements CommandLineRunner {

	private final CategoryRepository categoryRepository;
	private final ProductRepository productRepository;
	private final CountryRepository countryRepository;
	private final RoleRepository roleRepository;
	private final BrandRepository brandRepository;
	private final ImageRepository imageRepository;
	private final CustomerRepository customerRepository;
	private final CityRepository cityRepository;
	private final DistrictRepository districtRepository;

	private final PasswordEncoder passwordEncoder;
	public BootstrapData(CategoryRepository categoryRepository, ProductRepository productRepository,
			CountryRepository countryRepository, RoleRepository roleRepository, BrandRepository brandRepository,
			ImageRepository imageRepository, CustomerRepository customerRepository, CityRepository cityRepository,
			DistrictRepository districtRepository, PasswordEncoder passwordEncoder) {
		this.categoryRepository = categoryRepository;
		this.productRepository = productRepository;
		this.countryRepository = countryRepository;
		this.roleRepository = roleRepository;
		this.brandRepository = brandRepository;
		this.imageRepository = imageRepository;
		this.customerRepository = customerRepository;
		this.cityRepository = cityRepository;
		this.districtRepository = districtRepository;
		this.passwordEncoder = passwordEncoder;
	}

	@Override
	public void run(String... args) throws Exception {
		roleRepository.save(new Role(0, ERole.ROLE_USER));
		roleRepository.save(new Role(0, ERole.ROLE_ADMIN));
		ObjectMapper objectMapper = new ObjectMapper();

		List<Category> categories = objectMapper.readValue(getClass().getResourceAsStream("/data/categories.json"),
				new TypeReference<List<Category>>() {
				});

		List<Product> products = objectMapper.readValue(getClass().getResourceAsStream("/data/products.json"),
				new TypeReference<List<Product>>() {
				});

		List<Brand> brands = objectMapper.readValue(getClass().getResourceAsStream("/data/brands.json"),
				new TypeReference<List<Brand>>() {
				});

		List<Image> images = objectMapper.readValue(getClass().getResourceAsStream("/data/images.json"),
				new TypeReference<List<Image>>() {
				});

		List<Country> countries = objectMapper.readValue(getClass().getResourceAsStream("/data/country.json"),
				new TypeReference<List<Country>>() {
				});

		List<City> cities = objectMapper.readValue(getClass().getResourceAsStream("/data/cities.json"),
				new TypeReference<List<City>>() {
				});

		List<District> districts = objectMapper.readValue(getClass().getResourceAsStream("/data/districts.json"),
				new TypeReference<List<District>>() {
				});

		categoryRepository.saveAll(categories);

		brandRepository.saveAll(brands);
		productRepository.saveAll(products);
		imageRepository.saveAll(images);
		countryRepository.saveAll(countries);
		cityRepository.saveAll(cities);
		districtRepository.saveAll(districts);

		List<Role> roles = new ArrayList<>();
		roles.add(roleRepository.findByName(ERole.ROLE_ADMIN).get());
		Customer customer = new Customer();
		customer.setFirstName("Serhat");
		customer.setLastName("Biricik");
		customer.setEmail("biricikserhat47@gmail.com");
		customer.setUsername("serhatb0");
		customer.setPassword(passwordEncoder.encode("123456"));
		customer.setEmailVerified(true);
		customer.setRoles(roles);
		customerRepository.save(customer);
		
		
		List<Role> roles1 = new ArrayList<>();
		roles.add(roleRepository.findByName(ERole.ROLE_USER).get());
		Customer customer1 = new Customer();
		customer1.setFirstName("Serhat");
		customer1.setLastName("Biricik");
		customer1.setEmail("serhat47@gmail.com");
		customer1.setUsername("serhatb02");
		customer1.setPassword(passwordEncoder.encode("123456"));
		customer1.setEmailVerified(true);
		customer1.setAccountNonLocked(false);
		customer1.setRoles(roles1);
		customerRepository.save(customer1);

//		Address address = new Address();
//		address.setProvince("Mardin");
//		address.setDistrict("Kızıltepe");
//		address.setDoorNumber("12");
//		address.setStreet("Bahçelievler sk.");
//		address.setFullAddress("Mardin Kızıltepe Bahçelievler no:42");
//		address.setPostCode("47400");
//		address.setUser(customer);
//		addressRepository.save(address);

	}

}
